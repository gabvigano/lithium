# system update
[x] review the usage of traits for custom types
[x] review the usage of clone(), copied(), *...
[x] implement common methods for custom types (new()...) and replace current usage with them
[x] wrap components around wider components (e.g. Material contains Color, Layer, Show...)

# collisions
[x] rebuild the collisions algorithm
[x] make the collisions algorithm work (recursion goes in stackoverflow)
> there are currently different bugs that cause the collisions algorithm to crash due stackoverflow:
[x]     - when a dynamic object rests on top of another dynamic object
[ ]     - when a dynamic object slides over a static or dynamic object and reaches its edge while moving at a relatively slow speed; I actually believe there is an issue with collisions on vertices
[ ]     - when 2 dynamic objects hit each other too quickly (seems like vel > 40)
[ ]     - when 2 dynamic objects fall on top of another dynamic object (?)
[ ] implement collision support for all shapes
[ ] make a more detailed path-tracer (by only adding velocities, some information reguarding the path are lost, we should update position as well)

# system update
[x] remove the collider component, keep only elast because the hitbox is generated during collisions handling
[x] for Vec2 differentiate the perp() method for clockwise and counterclockwise direction

# rendering
[x] render objects following layers
[x] implement Display for components

# project management
[x] add README.md
[x] add CONTRIBUTING.md
[x] add LICENSE.md

# system update
> look for optimizations:
[ ]     - in collisions, we can use an algorithm faster than the monotone chain algorithm when the polygons translate without rotating
[ ]     - in collisions, we can implement triangles and rectangles as special cases
[x]     - in collisions, if we keep the iteration instead of the recursion we can early return when no more collisions are detected
> look for bugs:
[ ]     - check if convex_hull() works for a segment that moves along itself (so its vertices are collinear, and mybe only 2 are taken)
[x] better exception handling with Result instead of panic
[ ] refactor code (rename variables and functions, write comments and docstring)

# rendering
[x] render more complex objects (segment, triangle, polygon)
[x] correctly update vertices for segment, triangle and polygon

# physics
[x] more realistic physics with friction2

# system update
[ ] review API and security: make components private when necessary
[ ] support transform rotation (manually rotate objects)

# physics
[ ] support physical rotation (so angular velocity and acceleration...)

# rendering
[ ] switch to winit + wgpu for graphics
[ ] particle system
[ ] textures support

# audio
[ ] audio support
