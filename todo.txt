# system update
[x] review the usage of traits for custom types
[x] review the usage of clone(), copied(), *...
[x] implement common methods for custom types (new()...) and replace current usage with them
[x] wrap components around wider components (e.g. Material contains Color, Layer, Show...)

# collisions
[x] rebuild the collision algorithm
[x] make the collision algorithm work (recursion goes in stackoverflow)
[ ] implement collision support for all shapes
[ ] make a more detail path-tracer (by only adding velocities, some information reguarding the path are lost, we should update position as well)

# system update
[x] remove the collider component, keep only elast because the hitbox is generated during collisions handling
[ ] for Vec2 differentiate the perp() method for clockwise and counterclockwise direction

# rendering
[x] render objects following layers
[x] implement Display for components

# project management
[ ] add license

# collisions
[ ] stabilize collision detector (hardcode values to counteract approximations)

# system update
[ ] look for optimizations:
        - in collisions, we can use an algorithm faster than the monotone chain algorithm when the polygons translate without rotating.
        - in collisions, we can implement triangles and rectangles as special cases.
[ ] look for bugs:
        - check if convex_hull() works for a segment that moves along itself (so
        its vertices are collinear, and mybe only 2 are taken)
[ ] better exception handling with Result instead of panic
[ ] refactor code (rename variables and functions, write comments and docstring)

# rendering
[x] render more complex objects (segment, triangle, polygon)
[x] correctly update vertices for segment, triangle and polygon

# physics
[ ] more realistic physics with friction
